/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsDate,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { Parent } from "../../parent/base/Parent";
import { Contract } from "../../contract/base/Contract";
import { Child } from "../../child/base/Child";
import { Question } from "../../question/base/Question";

@ObjectType()
class Quiz {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  subject!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title!: string | null;

  @ApiProperty({
    required: false,
    type: () => Parent,
  })
  @ValidateNested()
  @Type(() => Parent)
  @IsOptional()
  parent?: Parent | null;

  @ApiProperty({
    required: false,
    type: () => Contract,
  })
  @ValidateNested()
  @Type(() => Contract)
  @IsOptional()
  contract?: Contract | null;

  @ApiProperty({
    required: false,
    type: () => Child,
  })
  @ValidateNested()
  @Type(() => Child)
  @IsOptional()
  child?: Child | null;

  @ApiProperty({
    required: false,
    type: () => [Question],
  })
  @ValidateNested()
  @Type(() => Question)
  @IsOptional()
  questions?: Array<Question>;
}

export { Quiz as Quiz };
