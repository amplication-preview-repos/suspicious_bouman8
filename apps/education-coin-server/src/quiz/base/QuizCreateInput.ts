/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { ParentWhereUniqueInput } from "../../parent/base/ParentWhereUniqueInput";
import { Type } from "class-transformer";
import { ContractWhereUniqueInput } from "../../contract/base/ContractWhereUniqueInput";
import { ChildWhereUniqueInput } from "../../child/base/ChildWhereUniqueInput";
import { QuestionCreateNestedManyWithoutQuizzesInput } from "./QuestionCreateNestedManyWithoutQuizzesInput";

@InputType()
class QuizCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  subject?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: () => ParentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ParentWhereUniqueInput)
  @IsOptional()
  @Field(() => ParentWhereUniqueInput, {
    nullable: true,
  })
  parent?: ParentWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ContractWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ContractWhereUniqueInput)
  @IsOptional()
  @Field(() => ContractWhereUniqueInput, {
    nullable: true,
  })
  contract?: ContractWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ChildWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ChildWhereUniqueInput)
  @IsOptional()
  @Field(() => ChildWhereUniqueInput, {
    nullable: true,
  })
  child?: ChildWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => QuestionCreateNestedManyWithoutQuizzesInput,
  })
  @ValidateNested()
  @Type(() => QuestionCreateNestedManyWithoutQuizzesInput)
  @IsOptional()
  @Field(() => QuestionCreateNestedManyWithoutQuizzesInput, {
    nullable: true,
  })
  questions?: QuestionCreateNestedManyWithoutQuizzesInput;
}

export { QuizCreateInput as QuizCreateInput };
